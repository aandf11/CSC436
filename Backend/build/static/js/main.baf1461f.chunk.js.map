{"version":3,"sources":["Contexts.js","Login.js","Logout.js","Register.js","UserBar.js","CreateTodo.js","TodoList.js","Todo.js","pages/TodoPage.js","Header.js","reducers.js","pages/HeaderBar.js","pages/HomePage.js","User.js","UserList.js","pages/UserPage.js","pages/ProfilePage.js","App.js","index.js"],"names":["ThemeContext","React","createContext","primaryColor","secondaryColor","StateContext","state","dispatch","Login","show","handleClose","useContext","useState","username","setUsername","loginFailed","setLoginFailed","password","setPassword","useResource","url","method","data","user","login","useEffect","isLoading","error","alert","console","log","type","access_token","Modal","onHide","Form","onSubmit","e","preventDefault","Header","closeButton","Title","Body","Label","htmlFor","Control","value","onChange","evt","target","name","id","Text","style","color","Footer","Button","variant","onClick","disabled","length","Logout","Register","passwordRepeat","formData","setFormData","setStatus","register","UserBar","showLogin","setShowLogin","showRegister","setShowRegister","className","CreateTodo","title","setTitle","description","setContent","navigation","useNavigation","dateCreated","complete","dateCompleted","author","headers","todo","createTodo","Date","now","todoId","_id","navigate","undefined","TodoList","todos","map","p","i","Todo","short","todoToDel","deleteTodo","updateTodos","updateTodo","processedDescription","substring","Card","href","checked","date","toLocaleDateString","time","toLocaleTimeString","dComplete","memo","TodoPage","getTodo","text","theme","Navbar","Brand","userReducer","action","usersReducer","users","postReducer","timeElapsed","today","toUTCString","filter","appReducer","HeaderBar","setTheme","bg","expand","Container","Toggle","Collapse","Nav","Link","Suspense","fallback","HomePage","getTodos","User","UserList","u","UsersPage","getUsers","ProfilePage","App","useReducer","routes","mount","route","view","req","params","Provider","axiosInstance","axios","create","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baf1461f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const ThemeContext = React.createContext({\r\nprimaryColor: 'deepskyblue',\r\nsecondaryColor: 'coral'\r\n})\r\n\r\nexport const StateContext = React.createContext({\r\n    state: {},\r\n    dispatch: () => {}\r\n })\r\n ","//import React from 'react'\r\nimport React, { useContext, useState, useEffect} from 'react'\r\n\r\nimport { StateContext } from './Contexts'\r\n\r\nimport { useResource } from 'react-request-hook'\r\n\r\nimport { Modal, Form, Button } from 'react-bootstrap'\r\n\r\nexport default function Login({show, handleClose}) {\r\n\r\n    const {dispatch} = useContext(StateContext)\r\n\r\n    const [username, setUsername] = useState('')\r\n\r\n    const [ loginFailed, setLoginFailed ] = useState(false)\r\n    const [ password, setPassword ] = useState('')\r\n\r\n\r\n    function handleUsername (evt){setUsername(evt.target.value)}\r\n    function handlePassword (evt) { setPassword(evt.target.value)}\r\n\r\n    // const [ user, login ] = useResource((username, password) => ({\r\n    //     url: `/login/${encodeURI(username)}/${encodeURI(password)}`,\r\n    //     method: 'get'\r\n    // }))\r\n\r\n    const [ user, login ] = useResource((username, password) => ({\r\n              url: 'auth/login',\r\n              method: 'post',\r\n              data: {username, password}\r\n          }))\r\n      \r\n\r\n//     useEffect(() => {\r\n//         if (user && user.data) {\r\n// if (user.data.length > 0) {\r\n//                 setLoginFailed(false)\r\n//                 dispatch({ type: 'LOGIN', username: user.data[0].username })\r\n// } else {\r\n//                 setLoginFailed(true)\r\n// }\r\n// } \r\n// }, [user])\r\n\r\n\r\n  useEffect(() => {\r\n          if (user && user.isLoading === false && (user.data || user.error)) {\r\n              if (user.error) {\r\n                  setLoginFailed(true)\r\n                  alert('failed')\r\n              } else {\r\n                  setLoginFailed(false)\r\n                  console.log(user.data)\r\n                  dispatch({ type: 'LOGIN', username, access_token: user.data.access_token })          \r\n              }\r\n          } \r\n      }, [user])\r\n  \r\n\r\n\r\n\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n        <Form onSubmit={e => { e.preventDefault(); login(username, password); handleClose() }}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Login</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <Form.Label htmlFor=\"login-username\">Username:</Form.Label>\r\n          <Form.Control type=\"text\" value={username} onChange={handleUsername} name=\"login-username\" id=\"login-username\" />\r\n          <Form.Label htmlFor=\"login-password\">Password:</Form.Label>\r\n          <Form.Control type=\"password\" value={password} onChange={handlePassword} name=\"login-password\" id=\"login-password\" />\r\n          {loginFailed && <Form.Text style={{ color: 'red' }}>Invalid username or password</Form.Text>}\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\r\n          <Button variant=\"primary\" disabled={username.length === 0} type=\"submit\">Login</Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n        )\r\n    }","import React, { useContext } from 'react'\r\nimport { StateContext } from './Contexts';\r\n\r\nexport default function Logout() {\r\n\r\n    const {state,dispatch} = useContext(StateContext)\r\n    return (\r\n    <form onSubmit={e => {e.preventDefault(); dispatch({type: 'LOGOUT'})}}>\r\n        Logged in as: <b>{state.user.username}</b>\r\n        <input type=\"submit\" value=\"Logout\" />\r\n        </form>\r\n        )\r\n    }","//import React from 'react'\r\nimport React,{useContext, useState, useEffect} from 'react'\r\nimport { useResource } from 'react-request-hook';\r\nimport { StateContext } from './Contexts';\r\nimport {Form, Button, Modal} from 'react-bootstrap'\r\n\r\nexport default function Register({show, handleClose}) {\r\n\r\n    const {dispatch} = useContext(StateContext)\r\n\r\n    const [ formData, setFormData ] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n        passwordRepeat: \"\"\r\n    })\r\n\r\n    const [ status, setStatus] = useState(\"\")\r\n    const [ user, register ] = useResource((username, password) => ({\r\n      url: 'auth/register',\r\n      method: 'post',\r\n      data: { username, password, 'passwordConfirmation': password }\r\n    }))\r\n    \r\n\r\n    useEffect(() => {\r\n        if (user && user.data) {\r\n            dispatch({ type: 'REGISTER', username: user.data.username })\r\n        }\r\n    }, [user])\r\n\r\n\r\n    useEffect(() => {\r\n        if (user && user.isLoading === false && (user.data || user.error)) {\r\n          if (user.error) {\r\n            console.log(user)\r\n            setStatus(\"Registration failed, please try again later.\")\r\n            alert(\"fail\")\r\n          } else {\r\n            console.log(user)\r\n            setStatus(\"Registration successful. You may now login.\")\r\n            alert(\"success\")\r\n          }\r\n            //dispatch({ type: 'REGISTER', username: user.data.username })\r\n        }\r\n      }, [user])\r\n      \r\n\r\n    // const [ username, setUsername ] = useState('')\r\n    // const [ password, setPassword ] = useState('')\r\n    // const [ passwordRepeat, setPasswordRepeat ] = useState('')\r\n    // function handleUsername (evt) { setUsername(evt.target.value) }\r\n    // function handlePassword (evt) { setPassword(evt.target.value) }\r\n    // function handlePasswordRepeat (evt) { setPasswordRepeat(evt.target.value) }\r\n\r\n\r\n    return (\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n        <Form onSubmit={e => { e.preventDefault(); register(formData.username, formData.password); handleClose(); }}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Register</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <Form.Label htmlFor=\"register-username\">Username:</Form.Label>\r\n          <Form.Control type=\"text\" value={formData.username} onChange={e => setFormData({ ...formData, username: e.target.value })} name=\"register-username\" id=\"register-username\" />\r\n          <Form.Label htmlFor=\"register-password\">Password:</Form.Label>\r\n          <Form.Control type=\"password\" name=\"register-password\" id=\"register-password\" value={formData.password} onChange={e => setFormData({ ...formData, password: e.target.value })} />\r\n          <Form.Label htmlFor=\"register-password-repeat\">Repeat password:</Form.Label>\r\n          <Form.Control type=\"password\" name=\"register-password-repeat\" id=\"register-password-repeat\" value={formData.passwordRepeat} onChange={e => setFormData({ ...formData, passwordRepeat: e.target.value })} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\r\n          <Button variant=\"primary\" type=\"submit\" disabled={formData.username.length === 0 || formData.password.length === 0 || formData.password !== formData.passwordRepeat}>Register</Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n\r\n    )\r\n}","//import React from 'react'\r\nimport React, {useContext, useState} from 'react'\r\nimport Login from './Login'\r\nimport Logout from './Logout'\r\nimport Register from './Register'\r\nimport { StateContext } from './Contexts'\r\nimport{Button} from 'react-bootstrap'\r\nexport default function UserBar() {\r\n    //const user = ''\r\n\r\n    const {state} = useContext(StateContext)   \r\n    \r\n    const [showLogin, setShowLogin] = useState(false)\r\n    const [showRegister, setShowRegister] = useState(false)\r\n\r\n\r\n    if (state.user.username) {\r\n       // return <Logout user={user} />\r\n       return <Logout  />\r\n    } else {\r\n        return (\r\n        <>\r\n        {/* <Login />\r\n        If You Are New User:\r\n        <Register /> */}\r\n            <div className=\"justify-content-end\">\r\n                <Button variant=\"link\" onClick={(e) => setShowLogin(true)}>\r\n                    Login\r\n                </Button>\r\n                <Login show={showLogin} handleClose={() => setShowLogin(false)} />\r\n                <Button variant=\"link\" onClick={(e) => setShowRegister(true)}>\r\n                    Register\r\n                </Button>\r\n                <Register show={showRegister} handleClose={() => setShowRegister(false)} />\r\n            </div>\r\n\r\n        </>\r\n        )\r\n    }\r\n}","import React, {useState,useContext,useEffect} from 'react'\r\nimport { useResource } from 'react-request-hook'\r\nimport { StateContext } from './Contexts'\r\nimport { useNavigation } from 'react-navi'\r\n\r\nexport default function CreateTodo () {\r\n\r\n    const [ title, setTitle ] = useState('')\r\n    const [ description, setContent ] = useState('')\r\n    //const {dispatch} = useContext(StateContext)\r\n    const navigation = useNavigation()\r\n\r\n    const {state, dispatch} = useContext(StateContext)\r\n    const {user} = state;\r\n    // const [todo , createTodo ] = useResource(({ title, description }) => ({\r\n    //     url: '/todos',\r\n    //     method: 'post',\r\n    //     data: { title, description}\r\n    // }))\r\n\r\n    // const [todo , createTodo ] = useResource(({ title, description,dateCreated, complete, dateCompleted, author }) => ({\r\n    //     url: '/todo',\r\n    //     method: 'post',\r\n    //     headers: {\"Authorization\": `${state.user.access_token}`},\r\n    //     data: { title, description, dateCreated, complete, dateCompleted,author }\r\n    // }))\r\n \r\n\r\n        const [todo , createTodo ] = useResource(({ title, description, dateCreated,complete, dateCompleted, author }) => ({\r\n                url: '/todo',\r\n                method: 'post',\r\n                headers: {\"Authorization\": `${state.user.access_token}`},\r\n                data: { title, description, dateCreated,complete, dateCompleted, author }\r\n            }))\r\n        \r\n\r\n\r\n\r\n    function handleTitle (evt) { setTitle(evt.target.value) }\r\n    function handleContent (evt) { setContent(evt.target.value) }\r\n\r\n\r\n    \r\n    // function handleCreate () {\r\n    //     createTodo({ title, description})\r\n\r\n    // }\r\n\r\n\r\n\r\n\r\n    // const complete = false;\r\n     const dateCreated = Date(Date.now())\r\n     const dateCompleted = undefined\r\n     const complete = false;\r\n    // const dateCompleted = undefined\r\n    //    function handleCreate () {\r\n    //             createTodo({ title, description, dateCreated, complete, dateCompleted, author: user.username })\r\n    //         }\r\n        \r\n\r\n\r\n\r\n        function handleCreate () {\r\n                    createTodo({ title, description, dateCreated,complete, dateCompleted, author: user.username })\r\n                }\r\n//     useEffect(() => {\r\n//         if (todo && todo.data && todo.isLoading === false) {\r\n//             dispatch({ type: 'CREATE_TODO', title: todo.data.title, description: todo.data.description,id:todo.data.id})\r\n//             navigation.navigate(`/todo/${todo.data.id}`)\r\n\r\n//         }\r\n//  }, [todo])\r\n\r\n\r\n//      useEffect(() => {\r\n//             if (todo && todo.data) {\r\n//                 dispatch({ type: 'CREATE_TODO', title: todo.data.title, description: todo.data.description, dateCreated : todo.data.dateCreated, complete : todo.data.complete, dateCompleted : todo.data.dateCompleted ,id: todo.data.id, author: user.username })\r\n//                 console.log(todo.data)\r\n//                 navigation.navigate(`/todo/${todo.data.id}`)\r\n//             }\r\n//         }, [todo])\r\n    \r\n        useEffect(() => {\r\n                if (todo && todo.data) {\r\n                    dispatch({ type: 'CREATE_TODO', title: todo.data.title, description: todo.data.description, dateCreated: todo.data.dateCreated,complete:todo.data.complete, dateCompleted: todo.data.dateCompleted, todoId: todo.data._id, author: user.username })\r\n                    console.log(todo.data)\r\n                    navigation.navigate(`/todo/${todo.data._id}`)\r\n                }\r\n            }, [todo])\r\n\r\n\r\n    // function handleCreate () {     \r\n    //     const newTodo = { title, content, author: user }\r\n    //     setTodos([ newTodo, ...todos ])}\r\n\r\n    return (<form onSubmit={e => {e.preventDefault(); handleCreate();}}\r\n    ><div>Logged In User: <b>{user.username}</b></div>\r\n    <div>\r\n        <label htmlFor=\"create-title\">Todo:</label>\r\n        <input type=\"text\" value= {title} onChange={handleTitle} name=\"create-title\" id=\"create-title\" />\r\n        </div>\r\n        Description:<textarea value={description} onChange={handleContent}/>\r\n        <input type=\"submit\" value=\"Create\" />\r\n        </form>\r\n            )\r\n        }","import React, { useContext } from 'react'\r\nimport Todo from './Todo'\r\n\r\nimport { StateContext } from './Contexts'\r\n\r\nexport default function TodoList () {\r\n\r\n    const {state} =useContext(StateContext)\r\n    const{todos} = state;\r\n\r\n    return (\r\n    <div>\r\n        {todos.map((p, i) => <Todo  key={'todo-' + i} {...p} title={p.title} description={p.description} dateCreated={p.dateCreated} complete={p.complete} dateCompleted={p.dateCompleted} id={p.id} />)}\r\n        </div>\r\n         )\r\n        }","import React,{useState, useContext, useEffect} from 'react'\r\nimport TodoList from './TodoList';\r\nimport {Link} from 'react-navi'\r\nimport {Card, Button} from 'react-bootstrap'\r\nimport { useResource } from 'react-request-hook';\r\nimport { ThemeContext , StateContext} from './Contexts';\r\n\r\nfunction Todo ({ title, description, dateCreated, complete, dateCompleted, _id, short=false}) {\r\n\r\n  const {state, dispatch} = useContext(StateContext)\r\n  const {user} = state\r\n\r\nconst [todoToDel , deleteTodo ] = useResource(({_id}) => ({\r\n    url: `/todos/${_id}`,\r\n    method: 'delete',\r\n    headers: { \"Authorization\": `${user.access_token}`}\r\n}))\r\n\r\n\r\nconst [updateTodos , updateTodo ] = useResource(({_id, complete, dateCompleted}) => ({\r\n  url: `/todos/${_id}`,\r\n  method: 'patch',\r\n  headers: { \"Authorization\": `${user.access_token}`},\r\n  data: {complete, dateCompleted}\r\n}))\r\n\r\nlet processedDescription = description\r\nif (short) {\r\n  if (description.length > 30) {\r\n    processedDescription = description.substring(0, 30) + '...'\r\n  }\r\n}\r\n\r\n\r\n\r\nconst handleCompleted = () => {\r\n  const date = new Date().toLocaleDateString();\r\n  const time = new Date().toLocaleTimeString();\r\n  let dComplete = `${date} ${time}`;\r\n  if (complete === true) {\r\n    dComplete = null;\r\n  }\r\n  updateTodo({id: _id, complete: !complete, dateCompleted: dComplete});\r\n}\r\n\r\n// useEffect(() => {\r\n//   if (updateTodos && updateTodos.data) {\r\n//     dispatch({type: 'TOGGLE_TODO', id: updateTodos.data._id, complete: updateTodos.data.complete, dateCompleted: updateTodos.data.dateCompleted})\r\n//   }\r\n// }, [updateTodos])\r\n\r\n\r\nuseEffect(() => {\r\n  if (updateTodos && updateTodos.isLoading === false && updateTodos.data) {\r\n      console.log(\"Data\")\r\n      console.log(updateTodos.data.todo)\r\n      dispatch({type: \"TOGGLE_TODO\", complete: !complete, todoId: _id, dateCompleted: Date.now()})\r\n  }\r\n}, [updateTodos])\r\n\r\n// const [toggleTodo, toggleTodoFunction] = useResource(\r\n//   (id, updatedComplete, updateDateCompleted) => ({\r\n//     url:  `/todos/${id}`,\r\n//     method: \"patch\",\r\n//     data: {\r\n//       completed: updatedComplete,\r\n//       dateCompleted: updateDateCompleted,\r\n//     },\r\n//   })\r\n// );\r\n\r\n\r\n// useEffect(() => {\r\n//   if (toggleTodo && toggleTodo.isLoading === false && toggleTodo.data) {\r\n//     dispatch({\r\n//       type: \"TOGGLE_TODO\",\r\n//       id,\r\n//       dateCompleted: toggleTodo.data.dateCompleted,\r\n//       completed: toggleTodo.data.completed,\r\n//     });\r\n//   }\r\n// }, [toggleTodo]);\r\n\r\n\r\n\r\nfunction handleComplete(){\r\n  const date = new Date().toLocaleDateString();\r\n  const time = new Date().toLocaleTimeString();\r\n  let dComplete = `${date} ${time}`;\r\n  if (complete) dComplete = ''\r\n  dispatch({type: 'TOGGLE_TODO', _id, dComplete})\r\n}\r\n\r\n// function handleDelete(){\r\n//   dispatch({type: 'DELETE_TODO', id})\r\n// }\r\n\r\n// const handleDelete = () => {\r\n//   // console.log(id);\r\n//   // deleteTodo({id: id});\r\n//   // dispatch({type:'DELETE_TODO', id});\r\n//   deleteTodo()\r\n// }\r\n\r\nfunction handleDelete() {\r\n  deleteTodo()\r\n}\r\n\r\nuseEffect(() => {\r\n  if (todoToDel && todoToDel.isLoading === false && todoToDel.data) {\r\n      dispatch({type: \"DELETE_TODO\", todoId: _id})\r\n  }\r\n}, [todoToDel])\r\n\r\n\r\nconst {secondaryColor} =  useContext(ThemeContext)\r\n//const {dispatch} = useContext(StateContext)\r\n\r\n\r\n\r\n    return (\r\n    // <div>\r\n    //      <Link href={`/todo/${id}`}><h3 style={{color: secondaryColor}}>{title}</h3></Link>\r\n    //     <div>Description: {processedDescription}</div>\r\n    //     <br />\r\n    //     <div>Date Created: {dateCreated}</div>\r\n    //     <br/>\r\n    //     <div>Have you completed: {complete}<label><input type=\"checkbox\" value ={complete} onChange={handleCompleted} />Yes Or No?</label>\r\n    //     </div>\r\n    //     <div>\r\n    //     <br/>\r\n    //     <button onClick={handleDelete}>Delete</button>\r\n    //     </div>\r\n    //     <br/>\r\n    //     <div>Date Completed: {dateCompleted}</div>\r\n    //     {short &&\r\n    //             <div>\r\n    //                 <br />\r\n    //                 <Link href={`/todo/${id}`}>View full todo</Link>\r\n    //             </div>\r\n    //         }\r\n\r\n    //     {/* <i>Written by <b>{author}</b></i> */}\r\n    //     </div>  \r\n\r\n\r\n<Card>\r\n<Card.Body>\r\n<Link href={`/todo/${_id}`}><h3 style={{color: secondaryColor}}>{title}</h3></Link>\r\n    <Card.Title><input type=\"checkbox\" checked={dateCompleted} onChange={handleCompleted} /> Have you completed?</Card.Title>\r\n    <Card.Text>Description: {processedDescription}</Card.Text>\r\n    <p>Date created: {dateCreated}</p>\r\n    {dateCompleted && <label>Date completed: {new Date(dateCompleted).toLocaleDateString('en-us')}</label>}\r\n    {dateCompleted && <br/>}\r\n    <Button onClick={handleDelete}>Delete</Button>\r\n    <br/><br/>\r\n</Card.Body>\r\n</Card>\r\n              )\r\n            }\r\n\r\n            export default React.memo(Todo)\r\n","\r\nimport React, { useEffect, useContext } from 'react'\r\nimport { useResource} from 'react-request-hook'\r\nimport {Link} from 'react-navi'\r\nimport Todo from '../Todo'\r\nimport { StateContext } from '../Contexts'\r\n\r\nexport default function TodoPage ({ _id }) {\r\n\r\n    const {state} = useContext(StateContext)\r\n\r\n    const [ todo, getTodo ] = useResource(() => ({\r\n        url: `/todo/${_id}`,\r\n        headers: {\"Authorization\": `${state.user.access_token}`},\r\n        method: 'get'\r\n    }))\r\n\r\n    useEffect(getTodo, [_id])\r\n\r\n    return (\r\n        <div>\r\n            {(todo && todo.data)\r\n                ? <Todo {...todo.data} />\r\n                : 'Loading...'\r\n            }\r\n            <hr/>\r\n    <div><Link href=\"/\">Go back</Link></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { ThemeContext } from './Contexts'\r\nimport {Link} from 'react-navi'\r\nimport { Navbar } from 'react-bootstrap'\r\nconst Header = ({text}) => {\r\n     const theme = useContext(ThemeContext)\r\n    // return <h1 style={ { color: theme.primaryColor} }>{text}</h1>\r\n   //  return <Link href=\"/\"><h1 style={{color: theme.primaryColor}}>{text}</h1></Link>\r\n     return <Link href=\"/\"><Navbar.Brand style={{color: theme.primaryColor}}>{text}</Navbar.Brand></Link>\r\n\r\n}\r\n\r\nexport default Header \r\n","function userReducer (state, action) {\r\n    switch (action.type) {\r\n      case 'LOGIN':\r\n      // case 'REGISTER':\r\n      //   return action.username\r\n      //   case 'LOGOUT':\r\n      //     return ''\r\n\r\n    case 'REGISTER':\r\n            return {\r\n                'username': action.username,\r\n                'access_token': action.access_token\r\n            }\r\n        case 'LOGOUT':\r\n            return {\r\n                'username': undefined,\r\n                'access_token': undefined\r\n            }\r\n\r\n          default:\r\n            return state\r\n          }\r\n        }\r\n\r\n\r\n        function usersReducer (state, action) {\r\n          switch (action.type) {\r\n              case 'FETCH_USERS':\r\n                  return action.users\r\n              default:\r\n                  return state\r\n          }   \r\n      }\r\n\r\n  function postReducer (state, action) {\r\n    const timeElapsed = Date.now();\r\n    const today = new Date(timeElapsed);\r\n    switch (action.type) {\r\n      case 'CREATE_TODO':\r\n        const newPost = {\r\n           title: action.title,\r\n           description: action.description,\r\n           //content: action.content,\r\n           dateCreated:today.toUTCString(),\r\n           complete: false,\r\n           dateCompleted: undefined,\r\n           _id: action.todoId\r\n           }\r\n           return [ newPost, ...state ]\r\n\r\n           case 'TOGGLE_TODO':\r\n\r\n            return state.map((todo) =>todo._id === action.todoId ? {  ...todo, complete:\r\n               action.complete, dateCompleted: action.dateCompleted,}: todo);\r\n          \r\n\r\n           case 'DELETE_TODO':\r\n             return state.filter(todo => todo._id  !== action.todoId);\r\n\r\n                \r\n            case 'FETCH_TODOS':\r\n                return action.todos\r\n\r\n           default:\r\n             return state\r\n            }\r\n          }    \r\n\r\n\r\n          export default function appReducer(state, action){\r\n              return{\r\n                  user: userReducer(state.user, action),\r\n                  todos: postReducer(state.todos, action),\r\n                  users: usersReducer(state.users, action)\r\n              }\r\n          }","import React, { useContext } from 'react'\r\nimport CreateTodo from '../CreateTodo'\r\n//import TodoList from '../TodoList'\r\nimport {Link} from 'react-navi'\r\nimport Header from '../Header'\r\nimport {ThemeContext,StateContext} from '../Contexts'\r\nimport ChangeTheme from '../ChangeTheme'\r\nimport UserBar from '../UserBar'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\nexport default function HeaderBar ({setTheme }) {\r\n\r\n    const {state} = useContext(StateContext)\r\n    const theme = useContext(ThemeContext)\r\n   // const {theme} = state;\r\n    const {user} =state;\r\n\r\nreturn (\r\n<>\r\n\r\n\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\"><Header text=\"My Todo\" /></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            {user.username && <Nav.Link><Link href=\"/todo/create\">Create New Todo</Link></Nav.Link>}\r\n            {/* <ChangeTheme theme={theme} setTheme={setTheme} /> */}\r\n          </Nav>\r\n          <React.Suspense fallback={\"Loading...\"}>\r\n            <UserBar />\r\n          </React.Suspense>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n\r\n</>\r\n)\r\n}\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { StateContext } from '../Contexts'\r\nimport { useResource } from 'react-request-hook'\r\nimport TodoList from '../TodoList'\r\n\r\n\r\n\r\n\r\nexport default function HomePage () {\r\n    const { state, dispatch } = useContext(StateContext)\r\n    const [ todos, getTodos ] = useResource(() => ({\r\n        url: '/todo',\r\n        method: 'get',\r\n        headers: {\"Authorization\": `${state.user.access_token}`}\r\n    }))\r\n\r\n    useEffect(()=>{\r\n        if(state.user.access_token){\r\n            getTodos()\r\n        }\r\n    },[])\r\n    // useEffect(getTodos, [])\r\n    useEffect(()=>{\r\n        getTodos()\r\n    },[state.user.access_token])\r\n\r\n    useEffect(() => {\r\n    if (todos && todos.isLoading === false && todos.data) {\r\n            dispatch({ type: 'FETCH_TODOS', todos: todos.data.todos })\r\n        }\r\n    }, [todos])\r\n    const { data, isLoading } = todos;\r\n    return (\r\n        <>\r\n          {isLoading && 'Todos loading...'} <TodoList />\r\n        </>\r\n    )\r\n} \r\n","import React from \"react\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-navi\";\r\n\r\nexport default function User({id, username}) {\r\n\r\n    return(\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <Link href={`/users/${id}`}>{username}</Link>\r\n                </Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport { StateContext } from \"./Contexts\";\r\nimport User from \"./User\"\r\n\r\nexport default function UserList() {\r\n\r\n    const {state} = useContext(StateContext)\r\n    const {users} = state\r\n\r\n    //console.log(users)\r\n\r\n    return (\r\n        <div>\r\n            {users.map((u, i) => <User id={u._id} username={u.username} key={'user-' + i}/>)}\r\n        </div>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useResource } from 'react-request-hook'\r\nimport { StateContext } from '../Contexts'\r\nimport UserList from '../UserList'\r\n\r\nexport default function UsersPage () {\r\n\r\n    const {state, dispatch} = useContext(StateContext)\r\n\r\n    const [ users, getUsers ] = useResource(() => ({\r\n        url: '/users',\r\n        method: 'get',\r\n    }))\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n    }, []) \r\n\r\n    useEffect(() => {\r\n        if (users && users.isLoading === false && users.data) {\r\n            console.log(users.data)\r\n            dispatch({ type: 'FETCH_USERS', users: users.data })\r\n        }\r\n    }, [users])\r\n\r\n    //console.log(users.data)\r\n\r\n    return(\r\n        <>\r\n            <h2>Users</h2>\r\n            {users && <UserList />}\r\n        </>\r\n    )\r\n}","import React, { useContext, useEffect } from 'react'\r\nimport { useResource } from 'react-request-hook'\r\nimport TodoList from '../TodoList'\r\nimport { StateContext } from '../Contexts';\r\n\r\nexport default function ProfilePage({id}) {\r\n\r\n    console.log(id)\r\n    const {state, dispatch} = useContext(StateContext)\r\n    const {user} = state\r\n    const [ todos, getTodos ] = useResource(() => ({\r\n        url: `/user/${id}`,\r\n        method: 'get'//,\r\n        //headers: {'Authorization': `${user.access_token}`}\r\n    }))\r\n\r\n    useEffect(() => { getTodos() }, [])\r\n\r\n    useEffect(() => {\r\n        if (todos && todos.isLoading === false && todos.data) {\r\n            dispatch({ type: 'FETCH_TODOS', todos: todos.data.todos })\r\n        }\r\n    }, [todos])\r\n\r\n    return (\r\n        <TodoList />\r\n    )\r\n}","// import logo from './logo.svg';\n// import './App.css';\nimport UserBar from './UserBar'\nimport {useState, useReducer, useEffect} from 'react'\nimport { useResource } from 'react-request-hook'\nimport{mount, route} from 'navi';\nimport {Router, View} from 'react-navi';\n//import Todo from './Todo'\nimport React from 'react'\nimport CreateTodo from './CreateTodo'\nimport TodoPage from './pages/TodoPage'\nimport TodoList from './TodoList'\nimport Header from './Header'\nimport {ThemeContext,StateContext} from './Contexts'\nimport ChangeTheme from './ChangeTheme'\nimport appReducer from './reducers'\nimport HeaderBar from './pages/HeaderBar'\nimport HomePage from './pages/HomePage'\nimport UsersPage from './pages/UserPage';\nimport ProfilePage from './pages/ProfilePage';\nimport { Container } from 'react-bootstrap';\n//export const ThemeContext = React.createContext({primary: 'blue'})\n\nfunction App() {\n\n  // const timeElapsed = Date.now();\n  // const today = new Date(timeElapsed);\n\n  //const [user, setUser] = useState('')\n // const [ user, dispatchUser ] = useReducer(userReducer, '')\n\n\n\n  // const initialTodos =[\n  //   {\n  //     title: \"buy eggs\",\n  //     description:\"go to buy some eggs\",\n  //     dateCreated: today.toUTCString(),\n  //     complete: false,\n  //     dateCompleted: today.toUTCString(),\n  //     id: Math.random()\n  //   },    {\n  //     title: \"clean house\",\n  //     description:\"clean my house\",\n  //     dateCreated: today.toUTCString(),\n  //     complete: false,\n  //     dateCompleted: today.toUTCString(),\n  //     id: Math.random()\n  //   },    {\n  //     title: \"pick up son\",\n  //     description:\"pick up son form school \",\n  //     dateCreated: today.toUTCString(),\n  //     complete: false,\n  //     dateCompleted: today.toUTCString(),\n  //     id: Math.random()\n  //   },\n  // ]\n\n//   const [ todos, getTodos ] = useResource(() => ({\n//     url: '/todos',\n//     method: 'get'\n// }))\n\nconst [state, dispatch] =useReducer(appReducer,{user: {}, todos: [], users: []})\n\n// useEffect(getTodos, [])\n\n// useEffect(() => {\n//     if (todos && todos.data) {\n//         dispatch({ type: 'FETCH_TODOS', todos: todos.data })\n//     }\n// }, [todos])\n\n\n // const [todos, setTodos] = useState(initialTodos)\n  //const [todos,dispatchTodo] = useReducer(postReducer, initialTodos)\n  \n \n  const {user} = state\n\n\n  const [theme,setTheme] = useState({\n    primaryColor: 'deepskyblue',\n    secondaryColor: 'coral'\n })\n\n  // function userReducer (state, action) {\n  //   switch (action.type) {\n  //     case 'LOGIN':\n  //     case 'REGISTER':\n  //       return action.username\n  //       case 'LOGOUT':\n  //         return ''\n  //         default:\n  //           return state\n  //         }\n  //       }\n\n\n  // function postReducer (state, action) {\n  //   switch (action.type) {\n  //     case 'CREATE_TODO':\n  //       const newPost = {\n  //          title: action.title,\n  //          description: action.description,\n  //          //content: action.content,\n  //          dateCreated:today.toUTCString(),\n  //          complete: false,\n  //          dateCompleted: '',\n  //          id: Math.random()\n  //          }\n  //          return [ newPost, ...state ]\n\n  //          case 'TOGGLE_TODO':\n\n  //           return state.map((todo) =>todo.id === action.id ? {  ...todo, complete:\n  //              !todo.complete, dateCompleted: action.dComplete,}: todo);\n          \n\n  //          case 'DELETE_TODO':\n  //            return state.filter(todo => todo.id  !== action.id);\n\n\n  //          default:\n  //            return state\n  //           }\n  //         }      \n  const routes = mount({\n    '/': route({ view: <HomePage /> }),\n    '/todo/create':route({ view: <CreateTodo /> }),\n    '/users': route({ view: <UsersPage />}),\n    '/users/:id': route(req => {\n      return { view: <ProfilePage id={req.params.id} /> }\n    }),\n    '/todo/:id': route(req => {\n        return { view: <TodoPage id={req.params.id} /> }\n    }),\n})\n\n\n  return(\n    <div>\n  <ThemeContext.Provider value={theme}>\n    <StateContext.Provider value = {{state: state, dispatch: dispatch }}>\n    <Router routes={routes}>\n      <Container>\n                <HeaderBar setTheme={setTheme} />\n                <hr />\n                <View/>\n      </Container>\n </Router>\n    </StateContext.Provider>\n    </ThemeContext.Provider>\n  </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport axios from 'axios'\n\nimport { RequestProvider } from 'react-request-hook'\n\nconst axiosInstance = axios.create({\n    baseURL: '/'\n})\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <RequestProvider value={axiosInstance}>\n    <App />\n    </RequestProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}